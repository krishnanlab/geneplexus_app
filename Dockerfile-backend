FROM ubuntu:18.04

ARG CONDA_VERSION=4.9.2
ARG PYTHON_VERSION=3.8

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/miniconda/bin:$PATH
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update --fix-missing && \
    apt-get install -y apt-utils wget bzip2 && \
    apt-get install -y fuse && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

RUN useradd --create-home dockeruser
WORKDIR /home/dockeruser
USER dockeruser

# install anaconda python
# anaconda numpy built with MKL for speed
RUN wget --quiet     https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p ~/miniconda && \
    rm ~/miniconda.sh && \
    ~/miniconda/bin/conda clean -tipsy 
ENV PATH="/home/dockeruser:/home/dockeruser/miniconda/bin:${PATH}"

COPY requirements.txt .

# install packages using conda, one at a time
RUN conda install -y conda=${CONDA_VERSION} python=${PYTHON_VERSION} pip && \
    conda install -y -c conda-forge --file requirements.txt && \
    conda clean -aqy && \
    rm -rf ~/miniconda/pkgs && \
    find ~/miniconda/ -type d -name __pycache__ -prune -exec rm -rf {} \;

# alternative install, one package at a time for troubleshooting
#    for p in `cat requirements.txt`; do conda install -y -c conda-forge $p; done && \



# copy application files into image

COPY app app
COPY azure/.dockerenv .env
COPY config.py .
COPY .flaskenv .
COPY runner.py .
COPY runner.sh .



# default command when this image is run
# this command launches the python model runner, using environment variables
# invoking this container requires setting env variables on the command line
# see runner.sh for those


CMD cd /home/dockeruser && ./runner.sh

ENTRYPOINT []